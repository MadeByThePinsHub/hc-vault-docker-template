#!/bin/bash
# shellcheck disable=SC2034

useColor() {
  RED=$(printf '\033[31m')
  GREEN=$(printf '\033[32m')
  YELLOW=$(printf '\033[33m')
  BLUE=$(printf '\033[34m')
  MAGENTA=$(printf '\033[35m')
  BOLD=$(printf '\033[1m')
  RESET=$(printf '\033[m')
}

warn() {
  echo "${YELLOW}warning: $* ${RESET}"
}

success() {
  echo "${GREEN}success: $* ${RESET}"
}

error() {
  echo "${RED}error: $* ${RESET}"
}

echoStageName() {
  echo "${BOLD}----> $* ${RESET}"
}

copyComposeTemplate() {
  if [[ $1 == "ghcr.io" ]]; then
    cp templates/compose/ghcr-pull.yml docker-compose.yml
  elif [[ $1 == "local" ]]; then
    cp templates/compose/build-locally.yml docker-compose.yml
  elif [[ $1 == "gitpodify" ]]; then
    cp templates/compose/gitpodify.yml docker-compose.yml
  elif [[ $1 == "no_mlock" ]]; then
    cp templates/compose/no-ipc-lock.yml docker-compose.yml
  elif [[ $1 == "cloud-shell" ]] || [[ $1 == "cloudshell" ]]; then
    cp templates/compose/cloud-shell.yml docker-compose.yml
  fi
}

main() {
  COMPOSE_TEMPLATE_TYPE=${COMPOSE_TEMPLATE_TYPE-ghcr.io}
  useColor

  echoStageName "Generating Docker Compose config from template $COMPOSE_TEMPLATE_TYPE"
  if [[ $CLOUD_SHELL == "true" ]] && [ ! -f docker-compose.yml ]; then
    copyComposeTemplate cloud-shell
  elif [ ! -f docker-compose.yml ]; then
    copyComposeTemplate $COMPOSE_TEMPLATE_TYPE
  elif [ -f docker-compose.yml ] && [[ $CLOUD_SHELL == "true" ]] && [[ $OVERWRITE_COMPOSE_FILE != "" ]]; then
    warn "Deleting old docker-compose.yml file and starting over in 5 seconds"
    sleep 5

    rm docker-compose.yml || true
    copyComposeTemplate $COMPOSE_TEMPLATE_TYPE
  elif [ -f docker-compose.yml ] && [[ $OVERWRITE_COMPOSE_FILE != "" ]]; then
    warn "Deleting old docker-compose.yml file and starting over in 5 seconds"
    sleep 5

    rm docker-compose.yml || true
    copyComposeTemplate $COMPOSE_TEMPLATE_TYPE
  else
    warn "docker-compose.yml exists! Please delete it first if you want to start over set OVERWRITE_COMPOSE_FILE to any value"
  fi
  sleep 3

  echoStageName "Generating .env file"
  if [ ! -f .env ]; then
    if [[ $CLOUD_SHELL == "true" ]]; then
      cp templates/dotenv/gcloudshell.env .env
    else
      cp .env.example .env
    fi
  elif [ -f .env ] && [[ $OVERWRITE_DOTENV_FILE != "" ]]; then
    warn "Deleting old .env file and starting over in 5 seconds"
    sleep 5

    rm .env || true
    if [[ $CLOUD_SHELL == "true" ]]; then
      cp templates/dotenv/disable_mlock.env .env
    else
      cp .env.example .env
    fi
  else
    warn "dotenv file exists! Please delete it first if you want to start over or set OVERWRITE_DOTENV_FILE to any value"
  fi

  success "Successfully prepared Compose files, now edit the .env file and configure as needed. Then you can do 'docker-compose up'."
}

main