#!/bin/bash

useColor() {
  # Only use colors if connected to a terminal
  if [ -t 1 ]; then
    RED=$(printf '\033[31m')
    GREEN=$(printf '\033[32m')
    YELLOW=$(printf '\033[33m')
    BLUE=$(printf '\033[34m')
    MAGENTA=$(printf '\033[35m')
    BOLD=$(printf '\033[1m')
    RESET=$(printf '\033[m')
  else
    RED=""
    GREEN=""
    YELLOW=""
    BLUE=""
    MAGENTA=""
    BOLD=""
    RESET=""
  fi
}

warn() {
  echo "${YELLOW}warning: $* ${RESET}"
}

success() {
  echo "${GREEN}success: $* ${RESET}"
}

error() {
  echo "${RED}error: $* ${RESET}"
}

echoStageName() {
  echo "${BOLD}----> $* ${RESET}"
}

main() {
  useColor

  echoStageName "Generating Docker Compose config"
  if [ ! -f docker-compose.yml ]; then
    cp docker-compose.template.yml docker-compose.yml
  else
    warn "docker-compose.yml exists! Please delete it first if you want to start over"
  fi

  echoStageName "Generating .env file"
  if [ ! -f .env ]; then
    cp .env.example .env
  else
    warn "dotenv file exists! Please delete it first if you want to start over"
  fi

  success "Successfully prepared Compose files, now edit the .env file and configure as needed."
}

main