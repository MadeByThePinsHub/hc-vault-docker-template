#!/bin/bash
# shellcheck disable=SC2034

useColor() {
  # Only use colors if connected to a terminal
  if [ -t 1 ]; then
    RED=$(printf '\033[31m')
    GREEN=$(printf '\033[32m')
    YELLOW=$(printf '\033[33m')
    BLUE=$(printf '\033[34m')
    MAGENTA=$(printf '\033[35m')
    BOLD=$(printf '\033[1m')
    RESET=$(printf '\033[m')
  else
    RED=""
    GREEN=""
    YELLOW=""
    BLUE=""
    MAGENTA=""
    BOLD=""
    RESET=""
  fi
}

warn() {
  echo "${YELLOW}warning: $* ${RESET}"
}

success() {
  echo "${GREEN}success: $* ${RESET}"
}

error() {
  echo "${RED}error: $* ${RESET}"
}

echoStageName() {
  echo "${BOLD}----> $* ${RESET}"
}

copyComposeTemplate() {
  if [[ $1 == "ghcr.io" ]]; then
    cp templates/compose/ghcr-pull.yml docker-compose.yml
  fi
}

main() {
  COMPOSE_TEMPLATE_TYPE=${COMPOSE_TEMPLATE_TYPE-ghcr.io}
  useColor

  echoStageName "Generating Docker Compose config from template $COMPOSE_TEMPLATE_TYPE"
  if [ ! -f docker-compose.yml ]; then
    copyComposeTemplate $COMPOSE_TEMPLATE_TYPE
  elif [ -f docker-compose.yml ] && [[ $OVERWRITE_COMPOSE_FILE != "" ]]; then
    warn "Deleting old docker-compose.yml file and starting over in 5 seconds"
    sleep 5

    rm docker-compose.yml || true
    cp docker-compose.template.yml docker-compose.yml
  else
    warn "docker-compose.yml exists! Please delete it first if you want to start over set OVERWRITE_COMPOSE_FILE to any value"
  fi
  sleep 3

  echoStageName "Generating .env file"
  if [ ! -f .env ]; then
    cp .env.example .env
  elif [ -f .env ] && [[ $OVERWRITE_DOTENV_FILE != "" ]]; then
    warn "Deleting old .env file and starting over in 5 seconds"
    sleep 5

    rm .env || true
    cp .env.example .env
  else
    warn "dotenv file exists! Please delete it first if you want to start over or set OVERWRITE_DOTENV_FILE to any value"
  fi

  success "Successfully prepared Compose files, now edit the .env file and configure as needed. Then you can do 'docker-compose up'."
}

main